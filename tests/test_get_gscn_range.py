import unittest
from nrarfcn import get_gscn_range


class TestGetGscnRange(unittest.TestCase):
    def test_valid_bands(self):
        band_range_map = {
            'n1': (5279, 5419),
            'n2': (4829, 4969),
            'n3': (4517, 4693),
            'n5': (2177, 2230),
            'n7': (6554, 6718),
            'n8': (2318, 2395),
            'n12': (1828, 1858),
            'n13': (1871, 1885),
            'n14': (1901, 1915),
            'n18': (2156, 2182),
            'n20': (1982, 2047),
            'n24': (3818, 3892),
            'n25': (4829, 4981),
            'n26': (2153, 2230),
            'n28': (1901, 2002),
            'n29': (1798, 1813),
            'n30': (5879, 5893),
            'n34': (5032, 5054),
            'n38': (6432, 6543),
            'n39': (4707, 4793),
            'n40': (5762, 5989),
            'n41': (6246, 6717),
            'n46': (8993, 9530),
            'n48': (7884, 7982),
            'n50': (3590, 3781),
            'n51': (3572, 3574),
            'n53': (6215, 6232),
            'n65': (5279, 5494),
            'n66': (5279, 5494),
            'n67': (1850, 1888),
            'n70': (4993, 5044),
            'n71': (1547, 1624),
            'n74': (3692, 3790),
            'n75': (3584, 3787),
            'n76': (3572, 3574),
            'n77': (7711, 8329),
            'n78': (7711, 8051),
            'n79': (8475, 8884),
            'n85': (1826, 1858),
            'n90': (6245, 6718),
            'n91': (3572, 3574),
            'n92': (3584, 3787),
            'n93': (3572, 3574),
            'n94': (3584, 3787),
            'n96': (9531, 10363),
            'n100': (2303, 2307),
            'n101': (4754, 4768),
            'n102': (9531, 9877),
            'n104': (9882, 10358),
            'n257': (22388, 22558),
            'n258': (22257, 22443),
            'n259': (23140, 23369),
            'n260': (22995, 23166),
            'n261': (22446, 22492),
            'n262': (23586, 23641),
            'n263': (24156, 24957)
        }

        for band, (min_gscn, max_gscn) in band_range_map.items():
            self.assertEqual(get_gscn_range(band), (min_gscn, max_gscn))
            int_band = int(band[1:])
            self.assertEqual(get_gscn_range(int_band), (min_gscn, max_gscn))

    def test_invalid_bands(self):
        invalid_bands = ['n4', 4, 'n6', 6, 0, 1.0, -1, 'n0', 64, 256, 'n', '']

        for band in invalid_bands:
            with self.assertRaises(ValueError):
                get_gscn_range(band)

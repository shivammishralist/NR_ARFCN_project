import unittest
from nrarfcn import get_frequency_range


class TestGetFrequencyRange(unittest.TestCase):
    def test_valid_bands_default_direction(self):
        band_range_map = {
            'n1': (2110, 2170),
            'n2': (1930, 1990),
            'n3': (1805, 1880),
            'n5': (869, 894),
            'n7': (2620, 2690),
            'n8': (925, 960),
            'n12': (729, 746),
            'n13': (746, 756),
            'n14': (758, 768),
            'n18': (860, 875),
            'n20': (791, 821),
            'n24': (1525, 1559),
            'n25': (1930, 1995),
            'n26': (859, 894),
            'n28': (758, 803),
            'n29': (717, 728),
            'n30': (2350, 2360),
            'n34': (2010, 2025),
            'n38': (2570, 2620),
            'n39': (1880, 1920),
            'n40': (2300, 2400),
            'n41': (2496, 2690),
            'n46': (5150, 5925),
            'n48': (3550, 3700),
            'n50': (1432, 1517),
            'n51': (1427, 1432),
            'n53': (2483.5, 2495),
            'n65': (2110, 2200),
            'n66': (2110, 2200),
            'n67': (738, 758),
            'n70': (1995, 2020),
            'n71': (617, 652),
            'n74': (1475, 1518),
            'n75': (1432, 1517),
            'n76': (1427, 1432),
            'n77': (3300, 4200),
            'n78': (3300, 3800),
            'n79': (4400, 5000),
            'n80': (1710, 1785),
            'n81': (880, 915),
            'n82': (832, 862),
            'n83': (703, 748),
            'n84': (1920, 1980),
            'n85': (728, 746),
            'n86': (1710, 1780),
            'n89': (824, 849),
            'n90': (2496, 2690),
            'n91': (1427, 1432),
            'n92': (1432, 1517),
            'n93': (1427, 1432),
            'n94': (1432, 1517),
            'n95': (2010, 2025),
            'n96': (5925, 7125),
            'n97': (2300, 2400),
            'n98': (1880, 1920),
            'n99': (1626.5, 1660.5),
            'n100': (919.4, 925),
            'n101': (1900, 1910),
            'n102': (5925, 6425),
            'n104': (6425, 7125),
            'n257': (26500, 29500),
            'n258': (24250, 27500),
            'n259': (39500, 43500),
            'n260': (37000, 40000),
            'n261': (27500, 28350),
            'n262': (47200, 48200),
            'n263': (57000, 71000)
        }

        for band, (min_freq, max_freq) in band_range_map.items():
            self.assertEqual(get_frequency_range(band), (min_freq, max_freq))
            int_band = int(band[1:])
            self.assertEqual(get_frequency_range(int_band), (min_freq, max_freq))

    def test_valid_bands_ul_direction(self):
        band_range_map = {
            'n1': (1920, 1980),
            'n2': (1850, 1910),
            'n3': (1710, 1785),
            'n5': (824, 849),
            'n7': (2500, 2570),
            'n8': (880, 915),
            'n12': (699, 716),
            'n13': (777, 787),
            'n14': (788, 798),
            'n18': (815, 830),
            'n20': (832, 862),
            'n24': (1626.5, 1660.5),
            'n25': (1850, 1915),
            'n26': (814, 849),
            'n28': (703, 748),
            'n29': ('N/A', 'N/A'),
            'n30': (2305, 2315),
            'n34': (2010, 2025),
            'n38': (2570, 2620),
            'n39': (1880, 1920),
            'n40': (2300, 2400),
            'n41': (2496, 2690),
            'n46': (5150, 5925),
            'n48': (3550, 3700),
            'n50': (1432, 1517),
            'n51': (1427, 1432),
            'n53': (2483.5, 2495),
            'n65': (1920, 2010),
            'n66': (1710, 1780),
            'n67': ('N/A', 'N/A'),
            'n70': (1695, 1710),
            'n71': (663, 698),
            'n74': (1427, 1470),
            'n75': ('N/A', 'N/A'),
            'n76': ('N/A', 'N/A'),
            'n77': (3300, 4200),
            'n78': (3300, 3800),
            'n79': (4400, 5000),
            'n80': (1710, 1785),
            'n81': (880, 915),
            'n82': (832, 862),
            'n83': (703, 748),
            'n84': (1920, 1980),
            'n85': (698, 716),
            'n86': (1710, 1780),
            'n89': (824, 849),
            'n90': (2496, 2690),
            'n91': (832, 862),
            'n92': (832, 862),
            'n93': (880, 915),
            'n94': (880, 915),
            'n95': (2010, 2025),
            'n96': (5925, 7125),
            'n97': (2300, 2400),
            'n98': (1880, 1920),
            'n99': (1626.5, 1660.5),
            'n100': (874.4, 880),
            'n101': (1900, 1910),
            'n102': (5925, 6425),
            'n104': (6425, 7125),
            'n257': (26500, 29500),
            'n258': (24250, 27500),
            'n259': (39500, 43500),
            'n260': (37000, 40000),
            'n261': (27500, 28350),
            'n262': (47200, 48200),
            'n263': (57000, 71000)
        }

        for band, (min_freq, max_freq) in band_range_map.items():
            self.assertEqual(get_frequency_range(band, direction='ul'), (min_freq, max_freq))
            int_band = int(band[1:])
            self.assertEqual(get_frequency_range(int_band, direction='ul'), (min_freq, max_freq))

    def test_valid_bands_dl_direction(self):
        band_range_map = {
            'n1': (2110, 2170),
            'n2': (1930, 1990),
            'n3': (1805, 1880),
            'n5': (869, 894),
            'n7': (2620, 2690),
            'n8': (925, 960),
            'n12': (729, 746),
            'n13': (746, 756),
            'n14': (758, 768),
            'n18': (860, 875),
            'n20': (791, 821),
            'n24': (1525, 1559),
            'n25': (1930, 1995),
            'n26': (859, 894),
            'n28': (758, 803),
            'n29': (717, 728),
            'n30': (2350, 2360),
            'n34': (2010, 2025),
            'n38': (2570, 2620),
            'n39': (1880, 1920),
            'n40': (2300, 2400),
            'n41': (2496, 2690),
            'n46': (5150, 5925),
            'n48': (3550, 3700),
            'n50': (1432, 1517),
            'n51': (1427, 1432),
            'n53': (2483.5, 2495),
            'n65': (2110, 2200),
            'n66': (2110, 2200),
            'n67': (738, 758),
            'n70': (1995, 2020),
            'n71': (617, 652),
            'n74': (1475, 1518),
            'n75': (1432, 1517),
            'n76': (1427, 1432),
            'n77': (3300, 4200),
            'n78': (3300, 3800),
            'n79': (4400, 5000),
            'n80': ('N/A', 'N/A'),
            'n81': ('N/A', 'N/A'),
            'n82': ('N/A', 'N/A'),
            'n83': ('N/A', 'N/A'),
            'n84': ('N/A', 'N/A'),
            'n85': (728, 746),
            'n86': ('N/A', 'N/A'),
            'n89': ('N/A', 'N/A'),
            'n90': (2496, 2690),
            'n91': (1427, 1432),
            'n92': (1432, 1517),
            'n93': (1427, 1432),
            'n94': (1432, 1517),
            'n95': ('N/A', 'N/A'),
            'n96': (5925, 7125),
            'n97': ('N/A', 'N/A'),
            'n98': ('N/A', 'N/A'),
            'n99': ('N/A', 'N/A'),
            'n100': (919.4, 925),
            'n101': (1900, 1910),
            'n102': (5925, 6425),
            'n104': (6425, 7125),
            'n257': (26500, 29500),
            'n258': (24250, 27500),
            'n259': (39500, 43500),
            'n260': (37000, 40000),
            'n261': (27500, 28350),
            'n262': (47200, 48200),
            'n263': (57000, 71000)
        }

        for band, (min_freq, max_freq) in band_range_map.items():
            self.assertEqual(get_frequency_range(band, direction='dl'), (min_freq, max_freq))
            int_band = int(band[1:])
            self.assertEqual(get_frequency_range(int_band, direction='dl'), (min_freq, max_freq))

    def test_invalid_bands(self):
        invalid_bands = ['n4', 4, 'n6', 6, 0, 1.0, -1, 'n0', 64, 256, 'n', '']

        for band in invalid_bands:
            with self.assertRaises(ValueError):
                get_frequency_range(band)

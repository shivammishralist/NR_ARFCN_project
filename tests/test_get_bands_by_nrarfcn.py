import unittest
from nrarfcn import get_bands_by_nrarfcn


class TestGetBandsByNrarfcn(unittest.TestCase):
    def test_valid_channels(self):
        channel_band_dict = {
            123400: ['n71'],
            139600: ['n71', 'n85'],
            139601: ['n85'],
            139800: ['n12', 'n85'],
            140600: ['n12', 'n28', 'n83', 'n85'],
            143201: ['n28', 'n83'],
            143400: ['n28', 'n29', 'n83'],
            145600: ['n28', 'n29', 'n83', 'n85'],
            145601: ['n28', 'n83', 'n85'],
            147600: ['n12', 'n28', 'n67', 'n83', 'n85'],
            149200: ['n12', 'n13', 'n28', 'n67', 'n83', 'n85'],
            149201: ['n13', 'n28', 'n67', 'n83'],
            149601: ['n13', 'n67'],
            151201: ['n67'],
            151600: ['n14', 'n28', 'n67'],
            151601: ['n14', 'n28'],
            153601: ['n28'],
            155400: ['n13', 'n28'],
            158200: ['n14', 'n20', 'n28'],
            159601: ['n20', 'n28'],
            160601: ['n20'],
            162800: ['n20', 'n26'],
            163000: ['n18', 'n20', 'n26'],
            164201: ['n18', 'n26'],
            164800: ['n5', 'n18', 'n26', 'n89'],
            166001: ['n5', 'n26', 'n89'],
            166400: ['n5', 'n20', 'n26', 'n82', 'n89', 'n91', 'n92'],
            169801: ['n20', 'n82', 'n91', 'n92'],
            171800: ['n20', 'n26', 'n82', 'n91', 'n92'],
            172000: ['n18', 'n20', 'n26', 'n82', 'n91', 'n92'],
            173800: ['n5', 'n18', 'n26'],
            174880: ['n5', 'n18', 'n26', 'n100'],
            175001: ['n5', 'n26', 'n100'],
            176000: ['n5', 'n8', 'n26', 'n81', 'n93', 'n94', 'n100'],
            176001: ['n5', 'n8', 'n26', 'n81', 'n93', 'n94'],
            178801: ['n8', 'n81', 'n93', 'n94'],
            183880: ['n100'],
            185000: ['n8', 'n100'],
            185001: ['n8'],
            285400: ['n51', 'n74', 'n76', 'n91', 'n93'],
            286400: ['n50', 'n51', 'n74', 'n75', 'n76', 'n91', 'n92', 'n93', 'n94'],
            286401: ['n50', 'n74', 'n75', 'n92', 'n94'],
            294001: ['n50', 'n75', 'n92', 'n94'],
            303401: ['n74'],
            305000: ['n24'],
            325300: ['n24', 'n99'],
            339000: ['n70'],
            342000: ['n3', 'n66', 'n70', 'n80', 'n86'],
            342001: ['n3', 'n66', 'n80', 'n86'],
            356001: ['n3', 'n80'],
            361000: ['n3'],
            370000: ['n2', 'n3', 'n25'],
            376000: ['n2', 'n3', 'n25', 'n39', 'n98'],
            376001: ['n2', 'n25', 'n39', 'n98'],
            380000: ['n2', 'n25', 'n39', 'n98', 'n101'],
            382001: ['n25', 'n39', 'n98'],
            383001: ['n39', 'n98'],
            384000: ['n1', 'n39', 'n65', 'n84', 'n98'],
            384001: ['n1', 'n65', 'n84'],
            386000: ['n1', 'n2', 'n25', 'n65', 'n84'],
            396001: ['n2', 'n25', 'n65'],
            398001: ['n25', 'n65'],
            399000: ['n25', 'n65', 'n70'],
            399001: ['n65', 'n70'],
            402000: ['n34', 'n65', 'n70', 'n95'],
            402001: ['n34', 'n70', 'n95'],
            404001: ['n34', 'n95'],
            422000: ['n1', 'n65', 'n66'],
            434001: ['n65', 'n66'],
            460000: ['n40', 'n97'],
            461000: ['n30', 'n40', 'n97'],
            496700: ['n53'],
            499200: ['n41', 'n90'],
            500000: ['n7', 'n41', 'n90'],
            514000: ['n7', 'n38', 'n41', 'n90'],
            514001: ['n38', 'n41', 'n90'],
            620000: ['n77', 'n78'],
            636667: ['n48', 'n77', 'n78'],
            653334: ['n77'],
            693334: ['n79'],
            743334: ['n46'],
            795000: ['n46', 'n96', 'n102'],
            795001: ['n96', 'n102'],
            828334: ['n96', 'n104'],
            2016667: ['n258'],
            2054166: ['n257', 'n258'],
            2070833: ['n257', 'n261'],
            2085000: ['n257'],
            2229166: ['n260'],
            2270833: ['n259', 'n260'],
            2279166: ['n259'],
            2399166: ['n262'],
            2562499: ['n263']
        }

        for channel, bands in channel_band_dict.items():
            self.assertListEqual(bands, get_bands_by_nrarfcn(channel))

    def test_invalid_channels(self):
        invalid_channels = [-1, 3279166, 1.0, None, '', '600000']

        for channel in invalid_channels:
            with self.assertRaises(ValueError):
                get_bands_by_nrarfcn(channel)

    def test_no_bands(self):
        no_band = [
            0,
            123399,
            130401,
            132599,
            183001,
            183879,
            192001,
            285399,
            303601,
            304999,
            311801,
            325299,
            332101,
            338999,
            357001,
            360999,
            405001,
            421999,
            440001,
            459999,
            480001,
            496699,
            499001,
            499199,
            538001,
            619999,
            680001,
            693333,
            733334,
            743333,
            875001,
            2016666,
            2104166,
            2229165,
            2337500,
            2399165,
            2415833,
            2562498,
            2795833,
            3279165
        ]

        for channel in no_band:
            self.assertListEqual([], get_bands_by_nrarfcn(channel))

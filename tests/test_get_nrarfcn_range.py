import unittest
from nrarfcn import get_nrarfcn_range


class TestGetNrarfcnRange(unittest.TestCase):
    def test_valid_bands_default_direction(self):
        band_range_map = {
            'n1': (422000, 434000),
            'n2': (386000, 398000),
            'n3': (361000, 376000),
            'n5': (173800, 178800),
            'n7': (524000, 538000),
            'n8': (185000, 192000),
            'n12': (145800, 149200),
            'n13': (149200, 151200),
            'n14': (151600, 153600),
            'n18': (172000, 175000),
            'n20': (158200, 164200),
            'n25': (386000, 399000),
            'n24': (305000, 311800),
            'n26': (171800, 178800),
            'n28': (151600, 160600),
            'n29': (143400, 145600),
            'n30': (470000, 472000),
            'n34': (402000, 405000),
            'n38': (514000, 524000),
            'n39': (376000, 384000),
            'n40': (460000, 480000),
            'n41': (499200, 537999),
            'n46': (743334, 795000),
            'n48': (636667, 646666),
            'n50': (286400, 303400),
            'n51': (285400, 286400),
            'n53': (496700, 499000),
            'n65': (422000, 440000),
            'n66': (422000, 440000),
            'n67': (147600, 151600),
            'n70': (399000, 404000),
            'n71': (123400, 130400),
            'n74': (295000, 303600),
            'n75': (286400, 303400),
            'n76': (285400, 286400),
            'n77': (620000, 680000),
            'n78': (620000, 653333),
            'n79': (693334, 733333),
            'n80': (342000, 357000),
            'n81': (176000, 183000),
            'n82': (166400, 172400),
            'n83': (140600, 149600),
            'n84': (384000, 396000),
            'n85': (145600, 149200),
            'n86': (342000, 356000),
            'n89': (164800, 169800),
            'n90': (499200, 538000),
            'n91': (285400, 286400),
            'n92': (286400, 303400),
            'n93': (285400, 286400),
            'n94': (286400, 303400),
            'n95': (402000, 405000),
            'n96': (795000, 875000),
            'n97': (460000, 480000),
            'n98': (376000, 384000),
            'n99': (325300, 332100),
            'n100': (183880, 185000),
            'n101': (380000, 382000),
            'n102': (796334, 828333),
            'n104': (828334, 875000),
            'n257': (2054166, 2104165),
            'n258': (2016667, 2070832),
            'n259': (2270833, 2337499),
            'n260': (2229166, 2279165),
            'n261': (2070833, 2084999),
            'n262': (2399166, 2415832),
            'n263': (2564083, 2794243)
        }

        for band, (min_freq, max_freq) in band_range_map.items():
            self.assertEqual(get_nrarfcn_range(band), (min_freq, max_freq))
            int_band = int(band[1:])
            self.assertEqual(get_nrarfcn_range(int_band), (min_freq, max_freq))

    def test_valid_bands_ul_direction(self):
        band_range_map = {
            'n1': (384000, 396000),
            'n2': (370000, 382000),
            'n3': (342000, 357000),
            'n5': (164800, 169800),
            'n7': (500000, 514000),
            'n8': (176000, 183000),
            'n12': (139800, 143200),
            'n13': (155400, 157400),
            'n14': (157600, 159600),
            'n18': (163000, 166000),
            'n20': (166400, 172400),
            'n25': (370000, 383000),
            'n24': (325300, 332100),
            'n26': (162800, 169800),
            'n28': (140600, 149600),
            'n29': ('N/A', 'N/A'),
            'n30': (461000, 463000),
            'n34': (402000, 405000),
            'n38': (514000, 524000),
            'n39': (376000, 384000),
            'n40': (460000, 480000),
            'n41': (499200, 537999),
            'n46': (743334, 795000),
            'n48': (636667, 646666),
            'n50': (286400, 303400),
            'n51': (285400, 286400),
            'n53': (496700, 499000),
            'n65': (384000, 402000),
            'n66': (342000, 356000),
            'n67': ('N/A', 'N/A'),
            'n70': (339000, 342000),
            'n71': (132600, 139600),
            'n74': (285400, 294000),
            'n75': ('N/A', 'N/A'),
            'n76': ('N/A', 'N/A'),
            'n77': (620000, 680000),
            'n78': (620000, 653333),
            'n79': (693334, 733333),
            'n80': (342000, 357000),
            'n81': (176000, 183000),
            'n82': (166400, 172400),
            'n83': (140600, 149600),
            'n84': (384000, 396000),
            'n85': (139600, 143200),
            'n86': (342000, 356000),
            'n89': (164800, 169800),
            'n90': (499200, 538000),
            'n91': (166400, 172400),
            'n92': (166400, 172400),
            'n93': (176000, 183000),
            'n94': (176000, 183000),
            'n95': (402000, 405000),
            'n96': (795000, 875000),
            'n97': (460000, 480000),
            'n98': (376000, 384000),
            'n99': (325300, 332100),
            'n100': (174880, 176000),
            'n101': (380000, 382000),
            'n102': (796334, 828333),
            'n104': (828334, 875000),
            'n257': (2054166, 2104165),
            'n258': (2016667, 2070832),
            'n259': (2270833, 2337499),
            'n260': (2229166, 2279165),
            'n261': (2070833, 2084999),
            'n262': (2399166, 2415832),
            'n263': (2564083, 2794243)
        }

        for band, (min_freq, max_freq) in band_range_map.items():
            self.assertEqual(get_nrarfcn_range(band, direction='ul'), (min_freq, max_freq))
            int_band = int(band[1:])
            self.assertEqual(get_nrarfcn_range(int_band, direction='ul'), (min_freq, max_freq))

    def test_valid_bands_dl_direction(self):
        band_range_map = {
            'n1': (422000, 434000),
            'n2': (386000, 398000),
            'n3': (361000, 376000),
            'n5': (173800, 178800),
            'n7': (524000, 538000),
            'n8': (185000, 192000),
            'n12': (145800, 149200),
            'n13': (149200, 151200),
            'n14': (151600, 153600),
            'n18': (172000, 175000),
            'n20': (158200, 164200),
            'n24': (305000, 311800),
            'n25': (386000, 399000),
            'n26': (171800, 178800),
            'n28': (151600, 160600),
            'n29': (143400, 145600),
            'n30': (470000, 472000),
            'n34': (402000, 405000),
            'n38': (514000, 524000),
            'n39': (376000, 384000),
            'n40': (460000, 480000),
            'n41': (499200, 537999),
            'n46': (743334, 795000),
            'n48': (636667, 646666),
            'n50': (286400, 303400),
            'n51': (285400, 286400),
            'n53': (496700, 499000),
            'n65': (422000, 440000),
            'n66': (422000, 440000),
            'n67': (147600, 151600),
            'n70': (399000, 404000),
            'n71': (123400, 130400),
            'n74': (295000, 303600),
            'n75': (286400, 303400),
            'n76': (285400, 286400),
            'n77': (620000, 680000),
            'n78': (620000, 653333),
            'n79': (693334, 733333),
            'n80': ('N/A', 'N/A'),
            'n81': ('N/A', 'N/A'),
            'n82': ('N/A', 'N/A'),
            'n83': ('N/A', 'N/A'),
            'n84': ('N/A', 'N/A'),
            'n85': (145600, 149200),
            'n86': ('N/A', 'N/A'),
            'n89': ('N/A', 'N/A'),
            'n90': (499200, 538000),
            'n91': (285400, 286400),
            'n92': (286400, 303400),
            'n93': (285400, 286400),
            'n94': (286400, 303400),
            'n95': ('N/A', 'N/A'),
            'n96': (795000, 875000),
            'n97': ('N/A', 'N/A'),
            'n98': ('N/A', 'N/A'),
            'n99': ('N/A', 'N/A'),
            'n100': (183880, 185000),
            'n101': (380000, 382000),
            'n102': (796334, 828333),
            'n104': (828334, 875000),
            'n257': (2054166, 2104165),
            'n258': (2016667, 2070832),
            'n259': (2270833, 2337499),
            'n260': (2229166, 2279165),
            'n261': (2070833, 2084999),
            'n262': (2399166, 2415832),
            'n263': (2564083, 2794243)
        }

        for band, (min_freq, max_freq) in band_range_map.items():
            self.assertEqual(get_nrarfcn_range(band, direction='dl'), (min_freq, max_freq))
            int_band = int(band[1:])
            self.assertEqual(get_nrarfcn_range(int_band, direction='dl'), (min_freq, max_freq))

    def test_invalid_bands(self):
        invalid_bands = ['n4', 4, 'n6', 6, 0, 1.0, -1, 'n0', 64, 256, 'n', '']

        for band in invalid_bands:
            with self.assertRaises(ValueError):
                get_nrarfcn_range(band)
